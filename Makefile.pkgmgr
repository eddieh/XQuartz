define clear-module-vars
undefine PKGNAME
undefine PKGROOT
undefine SRCROOT
undefine BIN_DEPS
undefine DEPS
undefine BUILD_FLAVOR
undefine BUILD_STYLE
undefine CONFIG_OPTS
undefine MAKE_ARTIFACT
undefine INST_ARTIFACT
undefine CONFIG_PATCHES
undefine BUILD_PATCHES
endef

define make-module-vars
$(eval include $(PKGDIR)/$(m).mk)
$(m)_PKGNAME := $(PKGNAME)
$(m)_PKGROOT := $(PKGROOT)
$(m)_SRCROOT := $(SRCROOT)
$(m)_BIN_DEPS := $(BIN_DEPS)
$(m)_DEPS := $(DEPS)
$(m)_BUILD_FLAVOR := $(BUILD_FLAVOR)
$(m)_BUILD_STYLE := $(BUILD_STYLE)
$(m)_CONFIG_OPTS := $(CONFIG_OPTS)
$(m)_MAKE_ARTIFACT := $(MAKE_ARTIFACT)
$(m)_INST_ARTIFACT := $(INST_ARTIFACT)
$(m)_CONFIG_PATCHES := $(CONFIG_PATCHES:%.patch=$(PATCHDIR)/%.patch.applied)
$(m)_BUILD_PATCHES := $(BUILD_PATCHES:%.patch=$(PATCHDIR)/%.patch.applied)
$(eval $(clear-module-vars))
endef

define make-module-deps
$(m)_CONFIG_DEPS += $($(m)_CONFIG_PATCHES)
$(m)_BUILD_DEPS += $($(m)_BUILD_PATCHES)
$(m)_PATCHES += $($(m)_CONFIG_PATCHES)
$(m)_PATCHES += $($(m)_BUILD_PATCHES)
endef

show-deps:
	@echo mesa_CONFIG_DEPS= $(mesa_CONFIG_DEPS)
	@echo mesa_BUILD_DEPS= $(mesa_BUILD_DEPS)

define make-patch-rule
$($(m)_PATCHES): %.patch.applied: %.patch
	patch -d $($(m)_SRCROOT) -p1 < $$< && date > $$@
endef

$(foreach m,$(MODULES),$(eval $(make-module-vars)))
$(foreach m,$(MODULES),$(eval $(make-module-deps)))
$(foreach m,$(MODULES),$(eval $(make-patch-rule)))

# 1) pkg name
# 2) src root
# 3) dependencies
# 4) make artifact is ignored
# 5) install artifact
define autotools-install-only
$(2)/configure: $(2)/configure.ac $(3)
	cd $(2) && autoreconf -vif

$(2)/Makefile: $(2)/configure
	cd $(2) && ./configure $$(XORG_CONFIG) \
		$$($(1)_CONFIG_OPTS)

$(5): $(2)/Makefile
	$(MAKE) install -C $(2)

$(2)/configure: $($(1)_CONFIG_DEPS)
$(2)/Makefile: $($(1)_BUILD_DEPS)
endef

# 1) pkg name
# 2) src root
# 3) dependencies
# 4) make artifact
# 5) install artifact
define autotools-make
$(2)/configure: $(2)/configure.ac $(3)
	cd $(2) && autoreconf -vif

$(2)/Makefile: $(2)/configure
	cd $(2) && ./configure $$(XORG_CONFIG) \
		$$($(1)_CONFIG_OPTS)

$(4): $(2)/Makefile
	$(MAKE) -C $(2)

$(5): $(4)
	$(MAKE) install -C $(2)

$(2)/configure: $($(1)_CONFIG_DEPS)
$(2)/Makefile: $($(1)_BUILD_DEPS)
endef

# 1) pkg name
# 2) src root
# 3) dependencies
# 4) make artifact
# 5) install artifact
define configure-make
$(2)/Makefile: $(2)/configure $(3)
	cd $(2) && ./configure $$(XORG_CONFIG) \
		$$($(1)_CONFIG_OPTS)

$(4): $(2)/Makefile
	$(MAKE) -C $(2)

$(5): $(4)
	$(MAKE) install -C $(2)

$(2)/configure: $($(1)_CONFIG_DEPS)
$(2)/Makefile: $($(1)_BUILD_DEPS)
endef

# 1) pkg name
# 2) src root
# 3) dependencies
# 4) make artifact
# 5) install artifact
define freetype2-autogen-make
$(2)/builds/unix/configure: $(2)/autogen.sh $(3)
	cd $(2) && ./autogen.sh

$(2)/builds/unix/unix-cc.mk: $(2)/builds/unix/configure
	cd $(2) && ./configure $$(XORG_CONFIG) \
		$$($(1)_CONFIG_OPTS)

$(4): $(2)/builds/unix/unix-cc.mk
	$(MAKE) -C $(2)

$(5): $(4)
	$(MAKE) install -C $(2)

$(2)/builds/unix/configure: $($(1)_CONFIG_DEPS)
$(2)/builds/unix/unix-cc.mk: $($(1)_BUILD_DEPS)
endef

# 1) pkg name
# 2) src root
# 3) dependencies
# 4) make artifact
# 5) install artifact
define meson-build
$(2)/build/build.ninja: $(2)/meson.build $(3)
	cd $(2) && meson build -Dprefix=$(PREFIX) \
		$$($(1)_CONFIG_OPTS)

$(4): $(2)/build/build.ninja
	ninja -C $(2)/build

$(5): $(4)
	ninja -C $(2)/build install
#	either ninja or meson is preserving the modification timestamp
	touch $(5)

$(2)/meson.build: $($(1)_CONFIG_DEPS)
$(2)/build/build.ninja: $($(1)_BUILD_DEPS)
endef

deps = $(foreach d,$(1),$$($(d)_INST_ARTIFACT))

$(foreach m,$(MODULES),\
	$(eval $(call $($(m)_BUILD_FLAVOR)-$($(m)_BUILD_STYLE),$(m),\
		$$($(m)_SRCROOT),\
		$(call deps,$($(m)_DEPS)),\
		$$($(m)_SRCROOT)/$$($(m)_MAKE_ARTIFACT),\
		$$($(m)_INST_ARTIFACT))))
